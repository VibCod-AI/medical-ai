"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/auth/page",{

/***/ "(app-pages-browser)/./src/contexts/AuthContext.tsx":
/*!**************************************!*\
  !*** ./src/contexts/AuthContext.tsx ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthProvider: () => (/* binding */ AuthProvider),\n/* harmony export */   useAuth: () => (/* binding */ useAuth)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_supabase_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/supabase/client */ \"(app-pages-browser)/./src/lib/supabase/client.ts\");\n/* __next_internal_client_entry_do_not_use__ AuthProvider,useAuth auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction AuthProvider(param) {\n    let { children } = param;\n    _s();\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [profile, setProfile] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [session, setSession] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const supabase = (0,_lib_supabase_client__WEBPACK_IMPORTED_MODULE_2__.getSupabaseClient)();\n    // Timeout de emergencia solo para la inicialización\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AuthProvider.useEffect\": ()=>{\n            const emergencyTimeout = setTimeout({\n                \"AuthProvider.useEffect.emergencyTimeout\": ()=>{\n                    if (loading) {\n                        console.warn('⚠️ AuthContext: Timeout de emergencia inicial - forzando loading = false');\n                        setLoading(false);\n                    }\n                }\n            }[\"AuthProvider.useEffect.emergencyTimeout\"], 5000) // 5 segundos\n            ;\n            return ({\n                \"AuthProvider.useEffect\": ()=>clearTimeout(emergencyTimeout)\n            })[\"AuthProvider.useEffect\"];\n        }\n    }[\"AuthProvider.useEffect\"], []); // Solo ejecutar una vez al inicializar\n    const fetchUserProfile = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"AuthProvider.useCallback[fetchUserProfile]\": async (userId)=>{\n            try {\n                console.log('👤 AuthContext: Iniciando fetchUserProfile para userId:', userId);\n                const { data, error } = await supabase.from('profiles').select('*').eq('id', userId).single();\n                console.log('👤 AuthContext: Respuesta de profiles query:', {\n                    data,\n                    error\n                });\n                if (error && error.code !== 'PGRST116') {\n                    console.error('❌ AuthContext: Error fetching profile:', error);\n                    return;\n                }\n                if (data) {\n                    console.log('✅ AuthContext: Perfil obtenido correctamente:', data);\n                    setProfile(data);\n                } else {\n                    console.log('⚠️ AuthContext: No se encontró perfil para el usuario');\n                }\n            } catch (error) {\n                console.error('❌ AuthContext: Error en fetchUserProfile:', error);\n            }\n        }\n    }[\"AuthProvider.useCallback[fetchUserProfile]\"], [\n        supabase\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AuthProvider.useEffect\": ()=>{\n            console.log('🔄 AuthContext: useEffect iniciado');\n            // Verificar configuración de Supabase\n            if (false) {}\n            console.log('✅ AuthContext: Variables de entorno OK');\n            // Configurar listener de cambios de autenticación (más confiable que getSession)\n            let isInitialized = false;\n            try {\n                const { data: { subscription } } = supabase.auth.onAuthStateChange({\n                    \"AuthProvider.useEffect\": async (event, session)=>{\n                        var _session_user;\n                        console.log('🔄 AuthContext: Auth state changed:', event, session === null || session === void 0 ? void 0 : (_session_user = session.user) === null || _session_user === void 0 ? void 0 : _session_user.email);\n                        setSession(session);\n                        var _session_user1;\n                        setUser((_session_user1 = session === null || session === void 0 ? void 0 : session.user) !== null && _session_user1 !== void 0 ? _session_user1 : null);\n                        if (session === null || session === void 0 ? void 0 : session.user) {\n                            console.log('👤 AuthContext: Usuario encontrado, obteniendo perfil...');\n                            await fetchUserProfile(session.user.id);\n                        } else {\n                            console.log('👤 AuthContext: No hay usuario autenticado');\n                            setProfile(null);\n                        }\n                        // Solo configurar loading en false después de la primera inicialización\n                        if (!isInitialized) {\n                            console.log('✅ AuthContext: Inicialización completada - loading = false');\n                            setLoading(false);\n                            isInitialized = true;\n                        }\n                    }\n                }[\"AuthProvider.useEffect\"]);\n                // Timeout de seguridad para la inicialización\n                setTimeout({\n                    \"AuthProvider.useEffect\": ()=>{\n                        if (!isInitialized) {\n                            console.log('⚠️ AuthContext: Timeout de inicialización - loading = false');\n                            setLoading(false);\n                            isInitialized = true;\n                        }\n                    }\n                }[\"AuthProvider.useEffect\"], 3000);\n                return ({\n                    \"AuthProvider.useEffect\": ()=>{\n                        console.log('🧹 AuthContext: Limpiando subscription');\n                        subscription.unsubscribe();\n                    }\n                })[\"AuthProvider.useEffect\"];\n            } catch (error) {\n                console.error('❌ AuthContext: Error configurando auth listener:', error);\n                setLoading(false);\n            }\n        }\n    }[\"AuthProvider.useEffect\"], [\n        supabase\n    ]);\n    const signUp = async (email, password, userData)=>{\n        try {\n            setLoading(true);\n            const { data, error } = await supabase.auth.signUp({\n                email,\n                password,\n                options: {\n                    data: {\n                        full_name: (userData === null || userData === void 0 ? void 0 : userData.full_name) || '',\n                        role: (userData === null || userData === void 0 ? void 0 : userData.role) || 'patient'\n                    }\n                }\n            });\n            if (error) {\n                return {\n                    error\n                };\n            }\n            // Si el usuario se registra exitosamente, crear perfil\n            if (data.user && !error) {\n                const profileData = {\n                    id: data.user.id,\n                    email: data.user.email,\n                    full_name: (userData === null || userData === void 0 ? void 0 : userData.full_name) || null,\n                    avatar_url: null,\n                    phone: (userData === null || userData === void 0 ? void 0 : userData.phone) || null,\n                    role: (userData === null || userData === void 0 ? void 0 : userData.role) || 'patient'\n                };\n                const { error: profileError } = await supabase.from('profiles').upsert([\n                    profileData\n                ]);\n                if (profileError) {\n                    console.error('Error creating profile:', profileError);\n                }\n            }\n            return {\n                error: undefined\n            };\n        } catch (error) {\n            console.error('Signup error:', error);\n            return {\n                error: error\n            };\n        } finally{\n            setLoading(false);\n        }\n    };\n    const signIn = async (email, password)=>{\n        try {\n            setLoading(true);\n            const { error } = await supabase.auth.signInWithPassword({\n                email,\n                password\n            });\n            return {\n                error\n            };\n        } catch (error) {\n            return {\n                error: error\n            };\n        } finally{\n            setLoading(false);\n        }\n    };\n    const signInWithGoogle = async ()=>{\n        try {\n            setLoading(true);\n            const { error } = await supabase.auth.signInWithOAuth({\n                provider: 'google',\n                options: {\n                    redirectTo: \"\".concat(window.location.origin, \"/auth/callback\")\n                }\n            });\n            return {\n                error\n            };\n        } catch (error) {\n            return {\n                error: error\n            };\n        } finally{\n            setLoading(false);\n        }\n    };\n    const signOut = async ()=>{\n        try {\n            console.log('🚪 AuthContext: Iniciando signOut...');\n            const { error } = await supabase.auth.signOut();\n            if (error) {\n                console.error('❌ AuthContext: Error en signOut:', error);\n                return {\n                    error\n                };\n            }\n            console.log('✅ AuthContext: SignOut exitoso');\n            // Limpiar estado inmediatamente sin esperar onAuthStateChange\n            setSession(null);\n            setUser(null);\n            setProfile(null);\n            return {\n                error: null\n            };\n        } catch (error) {\n            console.error('❌ AuthContext: Error en signOut catch:', error);\n            return {\n                error: error\n            };\n        }\n    };\n    const updateProfile = async (updates)=>{\n        try {\n            if (!user) {\n                return {\n                    error: new Error('No user logged in')\n                };\n            }\n            const { error } = await supabase.from('profiles').update(updates).eq('id', user.id);\n            if (!error) {\n                setProfile((prev)=>prev ? {\n                        ...prev,\n                        ...updates\n                    } : null);\n            }\n            return {\n                error: error\n            };\n        } catch (error) {\n            return {\n                error: error\n            };\n        }\n    };\n    const value = {\n        user,\n        profile,\n        session,\n        loading,\n        signUp,\n        signIn,\n        signInWithGoogle,\n        signOut,\n        updateProfile\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/habi/Documents/medical/medical-ai/src/contexts/AuthContext.tsx\",\n        lineNumber: 267,\n        columnNumber: 10\n    }, this);\n}\n_s(AuthProvider, \"kIR+B2Ymi/3wsmIpSzyQICur1OM=\");\n_c = AuthProvider;\nfunction useAuth() {\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AuthContext);\n    if (context === undefined) {\n        throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n}\n_s1(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/contexts/AuthContext.tsx\n"));

/***/ })

});