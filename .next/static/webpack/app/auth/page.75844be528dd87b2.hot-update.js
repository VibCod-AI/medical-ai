"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/auth/page",{

/***/ "(app-pages-browser)/./src/contexts/AuthContext.tsx":
/*!**************************************!*\
  !*** ./src/contexts/AuthContext.tsx ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthProvider: () => (/* binding */ AuthProvider),\n/* harmony export */   useAuth: () => (/* binding */ useAuth)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_supabase_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/supabase/client */ \"(app-pages-browser)/./src/lib/supabase/client.ts\");\n/* __next_internal_client_entry_do_not_use__ AuthProvider,useAuth auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction AuthProvider(param) {\n    let { children } = param;\n    _s();\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [profile, setProfile] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [session, setSession] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const supabase = (0,_lib_supabase_client__WEBPACK_IMPORTED_MODULE_2__.getSupabaseClient)();\n    // Timeout de emergencia solo para la inicialización\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AuthProvider.useEffect\": ()=>{\n            const emergencyTimeout = setTimeout({\n                \"AuthProvider.useEffect.emergencyTimeout\": ()=>{\n                    if (loading) {\n                        console.warn('⚠️ AuthContext: Timeout de emergencia inicial - forzando loading = false');\n                        setLoading(false);\n                    }\n                }\n            }[\"AuthProvider.useEffect.emergencyTimeout\"], 5000) // 5 segundos\n            ;\n            return ({\n                \"AuthProvider.useEffect\": ()=>clearTimeout(emergencyTimeout)\n            })[\"AuthProvider.useEffect\"];\n        }\n    }[\"AuthProvider.useEffect\"], []); // Solo ejecutar una vez al inicializar\n    const fetchUserProfile = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"AuthProvider.useCallback[fetchUserProfile]\": async (userId)=>{\n            try {\n                console.log('👤 AuthContext: Iniciando fetchUserProfile para userId:', userId);\n                const { data, error } = await supabase.from('profiles').select('*').eq('id', userId).single();\n                console.log('👤 AuthContext: Respuesta de profiles query:', {\n                    data,\n                    error\n                });\n                if (error && error.code !== 'PGRST116') {\n                    console.error('❌ AuthContext: Error fetching profile:', error);\n                    return;\n                }\n                if (data) {\n                    console.log('✅ AuthContext: Perfil obtenido correctamente:', data);\n                    setProfile(data);\n                } else {\n                    console.log('⚠️ AuthContext: No se encontró perfil para el usuario');\n                }\n            } catch (error) {\n                console.error('❌ AuthContext: Error en fetchUserProfile:', error);\n            }\n        }\n    }[\"AuthProvider.useCallback[fetchUserProfile]\"], [\n        supabase\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AuthProvider.useEffect\": ()=>{\n            console.log('🔄 AuthContext: useEffect iniciado');\n            // Verificar configuración de Supabase\n            if (false) {}\n            console.log('✅ AuthContext: Variables de entorno OK');\n            // Configurar listener de cambios de autenticación (más confiable que getSession)\n            let isInitialized = false;\n            try {\n                const { data: { subscription } } = supabase.auth.onAuthStateChange({\n                    \"AuthProvider.useEffect\": async (event, session)=>{\n                        var _session_user;\n                        console.log('🔄 AuthContext: Auth state changed:', event, session === null || session === void 0 ? void 0 : (_session_user = session.user) === null || _session_user === void 0 ? void 0 : _session_user.email);\n                        setSession(session);\n                        var _session_user1;\n                        setUser((_session_user1 = session === null || session === void 0 ? void 0 : session.user) !== null && _session_user1 !== void 0 ? _session_user1 : null);\n                        if (session === null || session === void 0 ? void 0 : session.user) {\n                            console.log('👤 AuthContext: Usuario encontrado, obteniendo perfil...');\n                            await fetchUserProfile(session.user.id);\n                        } else {\n                            console.log('👤 AuthContext: No hay usuario autenticado');\n                            setProfile(null);\n                        }\n                        // Solo configurar loading en false después de la primera inicialización\n                        if (!isInitialized) {\n                            console.log('✅ AuthContext: Inicialización completada - loading = false');\n                            setLoading(false);\n                            isInitialized = true;\n                        }\n                    }\n                }[\"AuthProvider.useEffect\"]);\n                // Timeout de seguridad para la inicialización\n                setTimeout({\n                    \"AuthProvider.useEffect\": ()=>{\n                        if (!isInitialized) {\n                            console.log('⚠️ AuthContext: Timeout de inicialización - loading = false');\n                            setLoading(false);\n                            isInitialized = true;\n                        }\n                    }\n                }[\"AuthProvider.useEffect\"], 3000);\n                return ({\n                    \"AuthProvider.useEffect\": ()=>{\n                        console.log('🧹 AuthContext: Limpiando subscription');\n                        subscription.unsubscribe();\n                    }\n                })[\"AuthProvider.useEffect\"];\n            } catch (error) {\n                console.error('❌ AuthContext: Error configurando auth listener:', error);\n                setLoading(false);\n            }\n        }\n    }[\"AuthProvider.useEffect\"], [\n        supabase\n    ]);\n    const signUp = async (email, password, userData)=>{\n        try {\n            setLoading(true);\n            const { data, error } = await supabase.auth.signUp({\n                email,\n                password,\n                options: {\n                    data: {\n                        full_name: (userData === null || userData === void 0 ? void 0 : userData.full_name) || '',\n                        role: (userData === null || userData === void 0 ? void 0 : userData.role) || 'patient'\n                    }\n                }\n            });\n            if (error) {\n                return {\n                    error\n                };\n            }\n            // Si el usuario se registra exitosamente, crear perfil\n            if (data.user && !error) {\n                const profileData = {\n                    id: data.user.id,\n                    email: data.user.email,\n                    full_name: (userData === null || userData === void 0 ? void 0 : userData.full_name) || null,\n                    avatar_url: null,\n                    phone: (userData === null || userData === void 0 ? void 0 : userData.phone) || null,\n                    role: (userData === null || userData === void 0 ? void 0 : userData.role) || 'patient'\n                };\n                const { error: profileError } = await supabase.from('profiles').upsert([\n                    profileData\n                ]);\n                if (profileError) {\n                    console.error('Error creating profile:', profileError);\n                }\n            }\n            return {\n                error: undefined\n            };\n        } catch (error) {\n            console.error('Signup error:', error);\n            return {\n                error: error\n            };\n        } finally{\n            setLoading(false);\n        }\n    };\n    const signIn = async (email, password)=>{\n        try {\n            setLoading(true);\n            const { error } = await supabase.auth.signInWithPassword({\n                email,\n                password\n            });\n            return {\n                error\n            };\n        } catch (error) {\n            return {\n                error: error\n            };\n        } finally{\n            setLoading(false);\n        }\n    };\n    const signInWithGoogle = async ()=>{\n        try {\n            setLoading(true);\n            const { error } = await supabase.auth.signInWithOAuth({\n                provider: 'google',\n                options: {\n                    redirectTo: \"\".concat(window.location.origin, \"/auth/callback\")\n                }\n            });\n            return {\n                error\n            };\n        } catch (error) {\n            return {\n                error: error\n            };\n        } finally{\n            setLoading(false);\n        }\n    };\n    const signOut = async ()=>{\n        try {\n            console.log('🚪 AuthContext: Iniciando signOut...');\n            setLoading(true);\n            const { error } = await supabase.auth.signOut();\n            if (error) {\n                console.error('❌ AuthContext: Error en signOut:', error);\n                return {\n                    error\n                };\n            }\n            console.log('✅ AuthContext: SignOut exitoso');\n            // Limpiar estado manualmente para asegurar que se cierre la sesión\n            setSession(null);\n            setUser(null);\n            setProfile(null);\n            return {\n                error: null\n            };\n        } catch (error) {\n            console.error('❌ AuthContext: Error en signOut catch:', error);\n            return {\n                error: error\n            };\n        } finally{\n            setLoading(false);\n        }\n    };\n    const updateProfile = async (updates)=>{\n        try {\n            if (!user) {\n                return {\n                    error: new Error('No user logged in')\n                };\n            }\n            const { error } = await supabase.from('profiles').update(updates).eq('id', user.id);\n            if (!error) {\n                setProfile((prev)=>prev ? {\n                        ...prev,\n                        ...updates\n                    } : null);\n            }\n            return {\n                error: error\n            };\n        } catch (error) {\n            return {\n                error: error\n            };\n        }\n    };\n    const value = {\n        user,\n        profile,\n        session,\n        loading,\n        signUp,\n        signIn,\n        signInWithGoogle,\n        signOut,\n        updateProfile\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/habi/Documents/medical/medical-ai/src/contexts/AuthContext.tsx\",\n        lineNumber: 270,\n        columnNumber: 10\n    }, this);\n}\n_s(AuthProvider, \"kIR+B2Ymi/3wsmIpSzyQICur1OM=\");\n_c = AuthProvider;\nfunction useAuth() {\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AuthContext);\n    if (context === undefined) {\n        throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n}\n_s1(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb250ZXh0cy9BdXRoQ29udGV4dC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFFMEY7QUFFakM7QUFlekQsTUFBTU8sNEJBQWNOLG9EQUFhQSxDQUE4Qk87QUFFeEQsU0FBU0MsYUFBYSxLQUEyQztRQUEzQyxFQUFFQyxRQUFRLEVBQWlDLEdBQTNDOztJQUMzQixNQUFNLENBQUNDLE1BQU1DLFFBQVEsR0FBR1IsK0NBQVFBLENBQWM7SUFDOUMsTUFBTSxDQUFDUyxTQUFTQyxXQUFXLEdBQUdWLCtDQUFRQSxDQUFxQjtJQUMzRCxNQUFNLENBQUNXLFNBQVNDLFdBQVcsR0FBR1osK0NBQVFBLENBQWlCO0lBQ3ZELE1BQU0sQ0FBQ2EsU0FBU0MsV0FBVyxHQUFHZCwrQ0FBUUEsQ0FBQztJQUV2QyxNQUFNZSxXQUFXYix1RUFBaUJBO0lBRWxDLG9EQUFvRDtJQUNwREgsZ0RBQVNBO2tDQUFDO1lBQ1IsTUFBTWlCLG1CQUFtQkM7MkRBQVc7b0JBQ2xDLElBQUlKLFNBQVM7d0JBQ1hLLFFBQVFDLElBQUksQ0FBQzt3QkFDYkwsV0FBVztvQkFDYjtnQkFDRjswREFBRyxNQUFNLGFBQWE7O1lBRXRCOzBDQUFPLElBQU1NLGFBQWFKOztRQUM1QjtpQ0FBRyxFQUFFLEdBQUUsdUNBQXVDO0lBRTlDLE1BQU1LLG1CQUFtQnBCLGtEQUFXQTtzREFBQyxPQUFPcUI7WUFDMUMsSUFBSTtnQkFDRkosUUFBUUssR0FBRyxDQUFDLDJEQUEyREQ7Z0JBRXZFLE1BQU0sRUFBRUUsSUFBSSxFQUFFQyxLQUFLLEVBQUUsR0FBRyxNQUFNVixTQUMzQlcsSUFBSSxDQUFDLFlBQ0xDLE1BQU0sQ0FBQyxLQUNQQyxFQUFFLENBQUMsTUFBTU4sUUFDVE8sTUFBTTtnQkFFVFgsUUFBUUssR0FBRyxDQUFDLGdEQUFnRDtvQkFBRUM7b0JBQU1DO2dCQUFNO2dCQUUxRSxJQUFJQSxTQUFTQSxNQUFNSyxJQUFJLEtBQUssWUFBWTtvQkFDdENaLFFB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O1FBQ0FDO0lBQ0Y7SUFFQSxxQkFBTyw4REFBQzdELFlBQVltRSxRQUFRO1FBQUNELE9BQU9BO2tCQUFRL0Q7Ozs7OztBQUM5QztHQXpQZ0JEO0tBQUFBO0FBMlBULFNBQVNrRTs7SUFDZCxNQUFNQyxVQUFVMUUsaURBQVVBLENBQUNLO0lBQzNCLElBQUlxRSxZQUFZcEUsV0FBVztRQUN6QixNQUFNLElBQUk4RCxNQUFNO0lBQ2xCO0lBQ0EsT0FBT007QUFDVDtJQU5nQkQiLCJzb3VyY2VzIjpbIi9Vc2Vycy9oYWJpL0RvY3VtZW50cy9tZWRpY2FsL21lZGljYWwtYWkvc3JjL2NvbnRleHRzL0F1dGhDb250ZXh0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCdcblxuaW1wb3J0IFJlYWN0LCB7IGNyZWF0ZUNvbnRleHQsIHVzZUNvbnRleHQsIHVzZUVmZmVjdCwgdXNlU3RhdGUsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBVc2VyLCBTZXNzaW9uLCBBdXRoRXJyb3IgfSBmcm9tICdAc3VwYWJhc2Uvc3VwYWJhc2UtanMnXG5pbXBvcnQgeyBnZXRTdXBhYmFzZUNsaWVudCB9IGZyb20gJ0AvbGliL3N1cGFiYXNlL2NsaWVudCdcbmltcG9ydCB7IFVzZXJQcm9maWxlIH0gZnJvbSAnQC90eXBlcy9zdXBhYmFzZSdcblxuaW50ZXJmYWNlIEF1dGhDb250ZXh0VHlwZSB7XG4gIHVzZXI6IFVzZXIgfCBudWxsXG4gIHByb2ZpbGU6IFVzZXJQcm9maWxlIHwgbnVsbFxuICBzZXNzaW9uOiBTZXNzaW9uIHwgbnVsbFxuICBsb2FkaW5nOiBib29sZWFuXG4gIHNpZ25VcDogKGVtYWlsOiBzdHJpbmcsIHBhc3N3b3JkOiBzdHJpbmcsIHVzZXJEYXRhPzogUGFydGlhbDxVc2VyUHJvZmlsZT4pID0+IFByb21pc2U8eyBlcnJvcj86IEF1dGhFcnJvciB8IG51bGwgfT5cbiAgc2lnbkluOiAoZW1haWw6IHN0cmluZywgcGFzc3dvcmQ6IHN0cmluZykgPT4gUHJvbWlzZTx7IGVycm9yPzogQXV0aEVycm9yIHwgbnVsbCB9PlxuICBzaWduSW5XaXRoR29vZ2xlOiAoKSA9PiBQcm9taXNlPHsgZXJyb3I/OiBBdXRoRXJyb3IgfCBudWxsIH0+XG4gIHNpZ25PdXQ6ICgpID0+IFByb21pc2U8eyBlcnJvcj86IEF1dGhFcnJvciB8IG51bGwgfT5cbiAgdXBkYXRlUHJvZmlsZTogKHVwZGF0ZXM6IFBhcnRpYWw8VXNlclByb2ZpbGU+KSA9PiBQcm9taXNlPHsgZXJyb3I/OiBFcnJvciB8IG51bGwgfT5cbn1cblxuY29uc3QgQXV0aENvbnRleHQgPSBjcmVhdGVDb250ZXh0PEF1dGhDb250ZXh0VHlwZSB8IHVuZGVmaW5lZD4odW5kZWZpbmVkKVxuXG5leHBvcnQgZnVuY3Rpb24gQXV0aFByb3ZpZGVyKHsgY2hpbGRyZW4gfTogeyBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlIH0pIHtcbiAgY29uc3QgW3VzZXIsIHNldFVzZXJdID0gdXNlU3RhdGU8VXNlciB8IG51bGw+KG51bGwpXG4gIGNvbnN0IFtwcm9maWxlLCBzZXRQcm9maWxlXSA9IHVzZVN0YXRlPFVzZXJQcm9maWxlIHwgbnVsbD4obnVsbClcbiAgY29uc3QgW3Nlc3Npb24sIHNldFNlc3Npb25dID0gdXNlU3RhdGU8U2Vzc2lvbiB8IG51bGw+KG51bGwpXG4gIGNvbnN0IFtsb2FkaW5nLCBzZXRMb2FkaW5nXSA9IHVzZVN0YXRlKHRydWUpXG5cbiAgY29uc3Qgc3VwYWJhc2UgPSBnZXRTdXBhYmFzZUNsaWVudCgpXG5cbiAgLy8gVGltZW91dCBkZSBlbWVyZ2VuY2lhIHNvbG8gcGFyYSBsYSBpbmljaWFsaXphY2nDs25cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBlbWVyZ2VuY3lUaW1lb3V0ID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICBpZiAobG9hZGluZykge1xuICAgICAgICBjb25zb2xlLndhcm4oJ+KaoO+4jyBBdXRoQ29udGV4dDogVGltZW91dCBkZSBlbWVyZ2VuY2lhIGluaWNpYWwgLSBmb3J6YW5kbyBsb2FkaW5nID0gZmFsc2UnKVxuICAgICAgICBzZXRMb2FkaW5nKGZhbHNlKVxuICAgICAgfVxuICAgIH0sIDUwMDApIC8vIDUgc2VndW5kb3NcblxuICAgIHJldHVybiAoKSA9PiBjbGVhclRpbWVvdXQoZW1lcmdlbmN5VGltZW91dClcbiAgfSwgW10pIC8vIFNvbG8gZWplY3V0YXIgdW5hIHZleiBhbCBpbmljaWFsaXphclxuXG4gIGNvbnN0IGZldGNoVXNlclByb2ZpbGUgPSB1c2VDYWxsYmFjayhhc3luYyAodXNlcklkOiBzdHJpbmcpID0+IHtcbiAgICB0cnkge1xuICAgICAgY29uc29sZS5sb2coJ/CfkaQgQXV0aENvbnRleHQ6IEluaWNpYW5kbyBmZXRjaFVzZXJQcm9maWxlIHBhcmEgdXNlcklkOicsIHVzZXJJZClcbiAgICAgIFxuICAgICAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAgICAgLmZyb20oJ3Byb2ZpbGVzJylcbiAgICAgICAgLnNlbGVjdCgnKicpXG4gICAgICAgIC5lcSgnaWQnLCB1c2VySWQpXG4gICAgICAgIC5zaW5nbGUoKVxuXG4gICAgICBjb25zb2xlLmxvZygn8J+RpCBBdXRoQ29udGV4dDogUmVzcHVlc3RhIGRlIHByb2ZpbGVzIHF1ZXJ5OicsIHsgZGF0YSwgZXJyb3IgfSlcblxuICAgICAgaWYgKGVycm9yICYmIGVycm9yLmNvZGUgIT09ICdQR1JTVDExNicpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcign4p2MIEF1dGhDb250ZXh0OiBFcnJvciBmZXRjaGluZyBwcm9maWxlOicsIGVycm9yKVxuICAgICAgICByZXR1cm5cbiAgICAgIH1cblxuICAgICAgaWYgKGRhdGEpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ+KchSBBdXRoQ29udGV4dDogUGVyZmlsIG9idGVuaWRvIGNvcnJlY3RhbWVudGU6JywgZGF0YSlcbiAgICAgICAgc2V0UHJvZmlsZShkYXRhKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc29sZS5sb2coJ+KaoO+4jyBBdXRoQ29udGV4dDogTm8gc2UgZW5jb250csOzIHBlcmZpbCBwYXJhIGVsIHVzdWFyaW8nKVxuICAgICAgfVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCfinYwgQXV0aENvbnRleHQ6IEVycm9yIGVuIGZldGNoVXNlclByb2ZpbGU6JywgZXJyb3IpXG4gICAgfVxuICB9LCBbc3VwYWJhc2VdKVxuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc29sZS5sb2coJ/CflIQgQXV0aENvbnRleHQ6IHVzZUVmZmVjdCBpbmljaWFkbycpXG4gICAgXG4gICAgLy8gVmVyaWZpY2FyIGNvbmZpZ3VyYWNpw7NuIGRlIFN1cGFiYXNlXG4gICAgaWYgKCFwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwgfHwgIXByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCfinYwgQXV0aENvbnRleHQ6IFZhcmlhYmxlcyBkZSBlbnRvcm5vIGRlIFN1cGFiYXNlIG5vIGNvbmZpZ3VyYWRhcycpXG4gICAgICBzZXRMb2FkaW5nKGZhbHNlKVxuICAgICAgcmV0dXJuXG4gICAgfVxuICAgIFxuICAgIGNvbnNvbGUubG9nKCfinIUgQXV0aENvbnRleHQ6IFZhcmlhYmxlcyBkZSBlbnRvcm5vIE9LJylcbiAgICBcbiAgICAvLyBDb25maWd1cmFyIGxpc3RlbmVyIGRlIGNhbWJpb3MgZGUgYXV0ZW50aWNhY2nDs24gKG3DoXMgY29uZmlhYmxlIHF1ZSBnZXRTZXNzaW9uKVxuICAgIGxldCBpc0luaXRpYWxpemVkID0gZmFsc2VcbiAgICBcbiAgICB0cnkge1xuICAgICAgY29uc3Qge1xuICAgICAgICBkYXRhOiB7IHN1YnNjcmlwdGlvbiB9LFxuICAgICAgfSA9IHN1cGFiYXNlLmF1dGgub25BdXRoU3RhdGVDaGFuZ2UoYXN5bmMgKGV2ZW50LCBzZXNzaW9uKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKCfwn5SEIEF1dGhDb250ZXh0OiBBdXRoIHN0YXRlIGNoYW5nZWQ6JywgZXZlbnQsIHNlc3Npb24/LnVzZXI/LmVtYWlsKVxuICAgICAgICBcbiAgICAgICAgc2V0U2Vzc2lvbihzZXNzaW9uKVxuICAgICAgICBzZXRVc2VyKHNlc3Npb24/LnVzZXIgPz8gbnVsbClcbiAgICAgICAgXG4gICAgICAgIGlmIChzZXNzaW9uPy51c2VyKSB7XG4gICAgICAgICAgY29uc29sZS5sb2coJ/CfkaQgQXV0aENvbnRleHQ6IFVzdWFyaW8gZW5jb250cmFkbywgb2J0ZW5pZW5kbyBwZXJmaWwuLi4nKVxuICAgICAgICAgIGF3YWl0IGZldGNoVXNlclByb2ZpbGUoc2Vzc2lvbi51c2VyLmlkKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNvbnNvbGUubG9nKCfwn5GkIEF1dGhDb250ZXh0OiBObyBoYXkgdXN1YXJpbyBhdXRlbnRpY2FkbycpXG4gICAgICAgICAgc2V0UHJvZmlsZShudWxsKVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAvLyBTb2xvIGNvbmZpZ3VyYXIgbG9hZGluZyBlbiBmYWxzZSBkZXNwdcOpcyBkZSBsYSBwcmltZXJhIGluaWNpYWxpemFjacOzblxuICAgICAgICBpZiAoIWlzSW5pdGlhbGl6ZWQpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZygn4pyFIEF1dGhDb250ZXh0OiBJbmljaWFsaXphY2nDs24gY29tcGxldGFkYSAtIGxvYWRpbmcgPSBmYWxzZScpXG4gICAgICAgICAgc2V0TG9hZGluZyhmYWxzZSlcbiAgICAgICAgICBpc0luaXRpYWxpemVkID0gdHJ1ZVxuICAgICAgICB9XG4gICAgICB9KVxuXG4gICAgICAvLyBUaW1lb3V0IGRlIHNlZ3VyaWRhZCBwYXJhIGxhIGluaWNpYWxpemFjacOzblxuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIGlmICghaXNJbml0aWFsaXplZCkge1xuICAgICAgICAgIGNvbnNvbGUubG9nKCfimqDvuI8gQXV0aENvbnRleHQ6IFRpbWVvdXQgZGUgaW5pY2lhbGl6YWNpw7NuIC0gbG9hZGluZyA9IGZhbHNlJylcbiAgICAgICAgICBzZXRMb2FkaW5nKGZhbHNlKVxuICAgICAgICAgIGlzSW5pdGlhbGl6ZWQgPSB0cnVlXG4gICAgICAgIH1cbiAgICAgIH0sIDMwMDApXG5cbiAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKCfwn6e5IEF1dGhDb250ZXh0OiBMaW1waWFuZG8gc3Vic2NyaXB0aW9uJylcbiAgICAgICAgc3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKClcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcign4p2MIEF1dGhDb250ZXh0OiBFcnJvciBjb25maWd1cmFuZG8gYXV0aCBsaXN0ZW5lcjonLCBlcnJvcilcbiAgICAgIHNldExvYWRpbmcoZmFsc2UpXG4gICAgfVxuICB9LCBbc3VwYWJhc2VdKVxuXG4gIGNvbnN0IHNpZ25VcCA9IGFzeW5jIChlbWFpbDogc3RyaW5nLCBwYXNzd29yZDogc3RyaW5nLCB1c2VyRGF0YT86IFBhcnRpYWw8VXNlclByb2ZpbGU+KSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIHNldExvYWRpbmcodHJ1ZSlcbiAgICAgIFxuICAgICAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2UuYXV0aC5zaWduVXAoe1xuICAgICAgICBlbWFpbCxcbiAgICAgICAgcGFzc3dvcmQsXG4gICAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICBmdWxsX25hbWU6IHVzZXJEYXRhPy5mdWxsX25hbWUgfHwgJycsXG4gICAgICAgICAgICByb2xlOiB1c2VyRGF0YT8ucm9sZSB8fCAncGF0aWVudCdcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pXG5cbiAgICAgIGlmIChlcnJvcikge1xuICAgICAgICByZXR1cm4geyBlcnJvciB9XG4gICAgICB9XG5cbiAgICAgIC8vIFNpIGVsIHVzdWFyaW8gc2UgcmVnaXN0cmEgZXhpdG9zYW1lbnRlLCBjcmVhciBwZXJmaWxcbiAgICAgIGlmIChkYXRhLnVzZXIgJiYgIWVycm9yKSB7XG4gICAgICAgIGNvbnN0IHByb2ZpbGVEYXRhID0ge1xuICAgICAgICAgIGlkOiBkYXRhLnVzZXIuaWQsXG4gICAgICAgICAgZW1haWw6IGRhdGEudXNlci5lbWFpbCEsXG4gICAgICAgICAgZnVsbF9uYW1lOiB1c2VyRGF0YT8uZnVsbF9uYW1lIHx8IG51bGwsXG4gICAgICAgICAgYXZhdGFyX3VybDogbnVsbCxcbiAgICAgICAgICBwaG9uZTogdXNlckRhdGE/LnBob25lIHx8IG51bGwsXG4gICAgICAgICAgcm9sZTogKHVzZXJEYXRhPy5yb2xlIGFzICdwYXRpZW50JyB8ICdkb2N0b3InIHwgJ2FkbWluJykgfHwgJ3BhdGllbnQnXG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCB7IGVycm9yOiBwcm9maWxlRXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgICAgICAgLmZyb20oJ3Byb2ZpbGVzJylcbiAgICAgICAgICAudXBzZXJ0KFtwcm9maWxlRGF0YV0pXG5cbiAgICAgICAgaWYgKHByb2ZpbGVFcnJvcikge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGNyZWF0aW5nIHByb2ZpbGU6JywgcHJvZmlsZUVycm9yKVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7IGVycm9yOiB1bmRlZmluZWQgfVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdTaWdudXAgZXJyb3I6JywgZXJyb3IpXG4gICAgICByZXR1cm4geyBlcnJvcjogZXJyb3IgYXMgQXV0aEVycm9yIH1cbiAgICB9IGZpbmFsbHkge1xuICAgICAgc2V0TG9hZGluZyhmYWxzZSlcbiAgICB9XG4gIH1cblxuICBjb25zdCBzaWduSW4gPSBhc3luYyAoZW1haWw6IHN0cmluZywgcGFzc3dvcmQ6IHN0cmluZykgPT4ge1xuICAgIHRyeSB7XG4gICAgICBzZXRMb2FkaW5nKHRydWUpXG4gICAgICBjb25zdCB7IGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZS5hdXRoLnNpZ25JbldpdGhQYXNzd29yZCh7XG4gICAgICAgIGVtYWlsLFxuICAgICAgICBwYXNzd29yZCxcbiAgICAgIH0pXG4gICAgICByZXR1cm4geyBlcnJvciB9XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIHJldHVybiB7IGVycm9yOiBlcnJvciBhcyBBdXRoRXJyb3IgfVxuICAgIH0gZmluYWxseSB7XG4gICAgICBzZXRMb2FkaW5nKGZhbHNlKVxuICAgIH1cbiAgfVxuXG4gIGNvbnN0IHNpZ25JbldpdGhHb29nbGUgPSBhc3luYyAoKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIHNldExvYWRpbmcodHJ1ZSlcbiAgICAgIGNvbnN0IHsgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlLmF1dGguc2lnbkluV2l0aE9BdXRoKHtcbiAgICAgICAgcHJvdmlkZXI6ICdnb29nbGUnLFxuICAgICAgICBvcHRpb25zOiB7XG4gICAgICAgICAgcmVkaXJlY3RUbzogYCR7d2luZG93LmxvY2F0aW9uLm9yaWdpbn0vYXV0aC9jYWxsYmFja2BcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICAgIHJldHVybiB7IGVycm9yIH1cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgcmV0dXJuIHsgZXJyb3I6IGVycm9yIGFzIEF1dGhFcnJvciB9XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIHNldExvYWRpbmcoZmFsc2UpXG4gICAgfVxuICB9XG5cbiAgY29uc3Qgc2lnbk91dCA9IGFzeW5jICgpID0+IHtcbiAgICB0cnkge1xuICAgICAgY29uc29sZS5sb2coJ/CfmqogQXV0aENvbnRleHQ6IEluaWNpYW5kbyBzaWduT3V0Li4uJylcbiAgICAgIHNldExvYWRpbmcodHJ1ZSlcbiAgICAgIFxuICAgICAgY29uc3QgeyBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2UuYXV0aC5zaWduT3V0KClcbiAgICAgIFxuICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBBdXRoQ29udGV4dDogRXJyb3IgZW4gc2lnbk91dDonLCBlcnJvcilcbiAgICAgICAgcmV0dXJuIHsgZXJyb3IgfVxuICAgICAgfVxuICAgICAgXG4gICAgICBjb25zb2xlLmxvZygn4pyFIEF1dGhDb250ZXh0OiBTaWduT3V0IGV4aXRvc28nKVxuICAgICAgXG4gICAgICAvLyBMaW1waWFyIGVzdGFkbyBtYW51YWxtZW50ZSBwYXJhIGFzZWd1cmFyIHF1ZSBzZSBjaWVycmUgbGEgc2VzacOzblxuICAgICAgc2V0U2Vzc2lvbihudWxsKVxuICAgICAgc2V0VXNlcihudWxsKVxuICAgICAgc2V0UHJvZmlsZShudWxsKVxuICAgICAgXG4gICAgICByZXR1cm4geyBlcnJvcjogbnVsbCB9XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBBdXRoQ29udGV4dDogRXJyb3IgZW4gc2lnbk91dCBjYXRjaDonLCBlcnJvcilcbiAgICAgIHJldHVybiB7IGVycm9yOiBlcnJvciBhcyBBdXRoRXJyb3IgfVxuICAgIH0gZmluYWxseSB7XG4gICAgICBzZXRMb2FkaW5nKGZhbHNlKVxuICAgIH1cbiAgfVxuXG4gIGNvbnN0IHVwZGF0ZVByb2ZpbGUgPSBhc3luYyAodXBkYXRlczogUGFydGlhbDxVc2VyUHJvZmlsZT4pID0+IHtcbiAgICB0cnkge1xuICAgICAgaWYgKCF1c2VyKSB7XG4gICAgICAgIHJldHVybiB7IGVycm9yOiBuZXcgRXJyb3IoJ05vIHVzZXIgbG9nZ2VkIGluJykgfVxuICAgICAgfVxuXG4gICAgICBjb25zdCB7IGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgICAgICAuZnJvbSgncHJvZmlsZXMnKVxuICAgICAgICAudXBkYXRlKHVwZGF0ZXMpXG4gICAgICAgIC5lcSgnaWQnLCB1c2VyLmlkKVxuXG4gICAgICBpZiAoIWVycm9yKSB7XG4gICAgICAgIHNldFByb2ZpbGUocHJldiA9PiBwcmV2ID8geyAuLi5wcmV2LCAuLi51cGRhdGVzIH0gOiBudWxsKVxuICAgICAgfVxuXG4gICAgICByZXR1cm4geyBlcnJvcjogZXJyb3IgYXMgRXJyb3IgfCBudWxsIH1cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgcmV0dXJuIHsgZXJyb3I6IGVycm9yIGFzIEVycm9yIH1cbiAgICB9XG4gIH1cblxuICBjb25zdCB2YWx1ZSA9IHtcbiAgICB1c2VyLFxuICAgIHByb2ZpbGUsXG4gICAgc2Vzc2lvbixcbiAgICBsb2FkaW5nLFxuICAgIHNpZ25VcCxcbiAgICBzaWduSW4sXG4gICAgc2lnbkluV2l0aEdvb2dsZSxcbiAgICBzaWduT3V0LFxuICAgIHVwZGF0ZVByb2ZpbGUsXG4gIH1cblxuICByZXR1cm4gPEF1dGhDb250ZXh0LlByb3ZpZGVyIHZhbHVlPXt2YWx1ZX0+e2NoaWxkcmVufTwvQXV0aENvbnRleHQuUHJvdmlkZXI+XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VBdXRoKCkge1xuICBjb25zdCBjb250ZXh0ID0gdXNlQ29udGV4dChBdXRoQ29udGV4dClcbiAgaWYgKGNvbnRleHQgPT09IHVuZGVmaW5lZCkge1xuICAgIHRocm93IG5ldyBFcnJvcigndXNlQXV0aCBtdXN0IGJlIHVzZWQgd2l0aGluIGFuIEF1dGhQcm92aWRlcicpXG4gIH1cbiAgcmV0dXJuIGNvbnRleHRcbn1cbiJdLCJuYW1lcyI6WyJSZWFjdCIsImNyZWF0ZUNvbnRleHQiLCJ1c2VDb250ZXh0IiwidXNlRWZmZWN0IiwidXNlU3RhdGUiLCJ1c2VDYWxsYmFjayIsImdldFN1cGFiYXNlQ2xpZW50IiwiQXV0aENvbnRleHQiLCJ1bmRlZmluZWQiLCJBdXRoUHJvdmlkZXIiLCJjaGlsZHJlbiIsInVzZXIiLCJzZXRVc2VyIiwicHJvZmlsZSIsInNldFByb2ZpbGUiLCJzZXNzaW9uIiwic2V0U2Vzc2lvbiIsImxvYWRpbmciLCJzZXRMb2FkaW5nIiwic3VwYWJhc2UiLCJlbWVyZ2VuY3lUaW1lb3V0Iiwic2V0VGltZW91dCIsImNvbnNvbGUiLCJ3YXJuIiwiY2xlYXJUaW1lb3V0IiwiZmV0Y2hVc2VyUHJvZmlsZSIsInVzZXJJZCIsImxvZyIsImRhdGEiLCJlcnJvciIsImZyb20iLCJzZWxlY3QiLCJlcSIsInNpbmdsZSIsImNvZGUiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMIiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkiLCJpc0luaXRpYWxpemVkIiwic3Vic2NyaXB0aW9uIiwiYXV0aCIsIm9uQXV0aFN0YXRlQ2hhbmdlIiwiZXZlbnQiLCJlbWFpbCIsImlkIiwidW5zdWJzY3JpYmUiLCJzaWduVXAiLCJwYXNzd29yZCIsInVzZXJEYXRhIiwib3B0aW9ucyIsImZ1bGxfbmFtZSIsInJvbGUiLCJwcm9maWxlRGF0YSIsImF2YXRhcl91cmwiLCJwaG9uZSIsInByb2ZpbGVFcnJvciIsInVwc2VydCIsInNpZ25JbiIsInNpZ25JbldpdGhQYXNzd29yZCIsInNpZ25JbldpdGhHb29nbGUiLCJzaWduSW5XaXRoT0F1dGgiLCJwcm92aWRlciIsInJlZGlyZWN0VG8iLCJ3aW5kb3ciLCJsb2NhdGlvbiIsIm9yaWdpbiIsInNpZ25PdXQiLCJ1cGRhdGVQcm9maWxlIiwidXBkYXRlcyIsIkVycm9yIiwidXBkYXRlIiwicHJldiIsInZhbHVlIiwiUHJvdmlkZXIiLCJ1c2VBdXRoIiwiY29udGV4dCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/contexts/AuthContext.tsx\n"));

/***/ })

});